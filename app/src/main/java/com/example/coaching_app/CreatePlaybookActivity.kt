package com.example.coaching_app

import android.content.Intent
import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.util.Log
import android.widget.Toast
import com.example.coaching_app.databinding.ActivityCreatePlaybookBinding
import com.google.firebase.auth.FirebaseAuth
import com.google.firebase.firestore.FirebaseFirestore


class CreatePlaybookActivity : AppCompatActivity() {

    private lateinit var binding: ActivityCreatePlaybookBinding
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_create_playbook)
        binding = ActivityCreatePlaybookBinding.inflate(layoutInflater)
        val view = binding.root
        setContentView(view)

        val bundle: Bundle? = intent.extras
        val selectedTeam = intent.getParcelableExtra<Team>("selectedTeam")

        binding.createPlayButton.setOnClickListener{
            val playName = binding.playNameEditText.text.toString().trim()
            val playDescription = binding.playDescriptionEditText.text.toString().trim()
            if(playName.isNotEmpty() && playDescription.isNotEmpty()){

                val db = FirebaseFirestore.getInstance().collection("play_book")

                val playID = db.document().id
                val teamID = selectedTeam?.teamID
                val userID = FirebaseAuth.getInstance().currentUser?.uid

                val play = PlaybookModel("",
                    playName, playDescription, playID, teamID, userID)

                db.document(playID).set(play)
                    .addOnSuccessListener {
                        Toast.makeText(this, "New Play Uploaded Successfully",
                            Toast.LENGTH_LONG).show() }
                    .addOnFailureListener{
                        it.localizedMessage?.let { it1 -> Log.w("DB issue", it1) }
                    }

                val intent = Intent(this, PlaybookActivity::class.java)
                intent.putExtra("selectedTeam",selectedTeam)
                startActivity(intent)
            }
            else{
                Toast.makeText(this, "Play Name and Description must be filled in",
                    Toast.LENGTH_LONG).show()
            }
        }

    }
}
